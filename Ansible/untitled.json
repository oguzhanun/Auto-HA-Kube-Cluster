{"changed": true, "cmd": "kubeadm init --config /home/ubuntu/clusterconfig.yml --upload-certs --ignore-preflight-errors=All --v=5\n", "delta": "0:04:34.403684", "end": "2021-05-06 08:43:04.643435", "msg": "non-zero return code", "rc": 1, "start": "2021-05-06 08:38:30.239751", "stderr": "I0506 08:38:30.286637    7473 initconfiguration.go:200] loading configuration from \"/home/ubuntu/clusterconfig.yml\"\nI0506 08:38:30.288530    7473 initconfiguration.go:103] detected and using CRI socket: /var/run/dockershim.sock\nI0506 08:38:30.288700    7473 interface.go:400] Looking for default routes with IPv4 addresses\nI0506 08:38:30.288717    7473 interface.go:405] Default route transits interface \"eth0\"\nI0506 08:38:30.288849    7473 interface.go:208] Interface eth0 is up\nI0506 08:38:30.288909    7473 interface.go:256] Interface \"eth0\" has 2 addresses :[172.31.30.201/20 fe80::81f:58ff:fe95:4edf/64].\nI0506 08:38:30.288941    7473 interface.go:223] Checking addr  172.31.30.201/20.\nI0506 08:38:30.288949    7473 interface.go:230] IP found 172.31.30.201\nI0506 08:38:30.288957    7473 interface.go:262] Found valid IPv4 address 172.31.30.201 for interface \"eth0\".\nI0506 08:38:30.288963    7473 interface.go:411] Found active IP 172.31.30.201 \nW0506 08:38:30.346610    7473 configset.go:348] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]\nI0506 08:38:30.346867    7473 checks.go:577] validating Kubernetes and kubeadm version\nI0506 08:38:30.346892    7473 checks.go:166] validating if the firewall is enabled and active\nI0506 08:38:30.355176    7473 checks.go:201] validating availability of port 6443\nI0506 08:38:30.355395    7473 checks.go:201] validating availability of port 10259\nI0506 08:38:30.355430    7473 checks.go:201] validating availability of port 10257\nI0506 08:38:30.355454    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/kube-apiserver.yaml\nI0506 08:38:30.355473    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/kube-controller-manager.yaml\nI0506 08:38:30.355491    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/kube-scheduler.yaml\nI0506 08:38:30.355499    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/etcd.yaml\nI0506 08:38:30.355508    7473 checks.go:432] validating if the connectivity type is via proxy or direct\nI0506 08:38:30.355542    7473 checks.go:471] validating http connectivity to first IP address in the CIDR\nI0506 08:38:30.355566    7473 checks.go:471] validating http connectivity to first IP address in the CIDR\nI0506 08:38:30.355576    7473 checks.go:102] validating the container runtime\nI0506 08:38:30.405485    7473 checks.go:128] validating if the \"docker\" service is enabled and active\n\t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/\nI0506 08:38:30.477865    7473 checks.go:335] validating the contents of file /proc/sys/net/bridge/bridge-nf-call-iptables\nI0506 08:38:30.477908    7473 checks.go:335] validating the contents of file /proc/sys/net/ipv4/ip_forward\nI0506 08:38:30.477930    7473 checks.go:649] validating whether swap is enabled or not\nI0506 08:38:30.477962    7473 checks.go:376] validating the presence of executable conntrack\nI0506 08:38:30.477994    7473 checks.go:376] validating the presence of executable ip\nI0506 08:38:30.478019    7473 checks.go:376] validating the presence of executable iptables\nI0506 08:38:30.478038    7473 checks.go:376] validating the presence of executable mount\nI0506 08:38:30.478054    7473 checks.go:376] validating the presence of executable nsenter\nI0506 08:38:30.478088    7473 checks.go:376] validating the presence of executable ebtables\nI0506 08:38:30.478118    7473 checks.go:376] validating the presence of executable ethtool\nI0506 08:38:30.478134    7473 checks.go:376] validating the presence of executable socat\nI0506 08:38:30.478155    7473 checks.go:376] validating the presence of executable tc\nI0506 08:38:30.478191    7473 checks.go:376] validating the presence of executable touch\nI0506 08:38:30.478206    7473 checks.go:520] running all checks\n\t[WARNING SystemVerification]: this Docker version is not on the list of validated versions: 20.10.2. Latest validated version: 19.03\nI0506 08:38:30.541992    7473 checks.go:406] checking whether the given node name is reachable using net.LookupHost\nI0506 08:38:30.542675    7473 checks.go:618] validating kubelet version\nI0506 08:38:30.619738    7473 checks.go:128] validating if the \"kubelet\" service is enabled and active\nI0506 08:38:30.630782    7473 checks.go:201] validating availability of port 10250\nI0506 08:38:30.630849    7473 checks.go:201] validating availability of port 2379\nI0506 08:38:30.630875    7473 checks.go:201] validating availability of port 2380\nI0506 08:38:30.630900    7473 checks.go:249] validating the existence and emptiness of directory /var/lib/etcd\nI0506 08:38:30.685023    7473 checks.go:845] pulling k8s.gcr.io/kube-apiserver:v1.19.0\nI0506 08:38:33.126784    7473 checks.go:845] pulling k8s.gcr.io/kube-controller-manager:v1.19.0\nI0506 08:38:35.600567    7473 checks.go:845] pulling k8s.gcr.io/kube-scheduler:v1.19.0\nI0506 08:38:37.124519    7473 checks.go:845] pulling k8s.gcr.io/kube-proxy:v1.19.0\nI0506 08:38:38.619268    7473 checks.go:839] image exists: k8s.gcr.io/pause:3.2\nI0506 08:38:38.664091    7473 checks.go:839] image exists: k8s.gcr.io/etcd:3.4.9-1\nI0506 08:38:38.710389    7473 checks.go:839] image exists: k8s.gcr.io/coredns:1.7.0\nI0506 08:38:38.710455    7473 certs.go:103] creating a new certificate authority for ca\nI0506 08:38:39.360014    7473 certs.go:103] creating a new certificate authority for front-proxy-ca\nI0506 08:38:39.661025    7473 certs.go:103] creating a new certificate authority for etcd-ca\nI0506 08:38:41.235497    7473 certs.go:69] creating new public/private key files for signing service account users\nI0506 08:38:41.442926    7473 kubeconfig.go:84] creating kubeconfig file for admin.conf\nI0506 08:38:41.513064    7473 kubeconfig.go:84] creating kubeconfig file for kubelet.conf\nI0506 08:38:41.888092    7473 kubeconfig.go:84] creating kubeconfig file for controller-manager.conf\nI0506 08:38:42.660453    7473 kubeconfig.go:84] creating kubeconfig file for scheduler.conf\nI0506 08:38:42.954533    7473 kubelet.go:63] Stopping the kubelet\nI0506 08:38:43.124975    7473 manifests.go:96] [control-plane] getting StaticPodSpecs\nI0506 08:38:43.125451    7473 manifests.go:109] [control-plane] adding volume \"ca-certs\" for component \"kube-apiserver\"\nI0506 08:38:43.125472    7473 manifests.go:109] [control-plane] adding volume \"etc-ca-certificates\" for component \"kube-apiserver\"\nI0506 08:38:43.125478    7473 manifests.go:109] [control-plane] adding volume \"k8s-certs\" for component \"kube-apiserver\"\nI0506 08:38:43.125484    7473 manifests.go:109] [control-plane] adding volume \"usr-local-share-ca-certificates\" for component \"kube-apiserver\"\nI0506 08:38:43.125489    7473 manifests.go:109] [control-plane] adding volume \"usr-share-ca-certificates\" for component \"kube-apiserver\"\nI0506 08:38:43.132613    7473 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-apiserver\" to \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\nI0506 08:38:43.132644    7473 manifests.go:96] [control-plane] getting StaticPodSpecs\nI0506 08:38:43.132904    7473 manifests.go:109] [control-plane] adding volume \"ca-certs\" for component \"kube-controller-manager\"\nI0506 08:38:43.132917    7473 manifests.go:109] [control-plane] adding volume \"etc-ca-certificates\" for component \"kube-controller-manager\"\nI0506 08:38:43.132923    7473 manifests.go:109] [control-plane] adding volume \"flexvolume-dir\" for component \"kube-controller-manager\"\nI0506 08:38:43.132928    7473 manifests.go:109] [control-plane] adding volume \"k8s-certs\" for component \"kube-controller-manager\"\nI0506 08:38:43.132933    7473 manifests.go:109] [control-plane] adding volume \"kubeconfig\" for component \"kube-controller-manager\"\nI0506 08:38:43.132938    7473 manifests.go:109] [control-plane] adding volume \"usr-local-share-ca-certificates\" for component \"kube-controller-manager\"\nI0506 08:38:43.132944    7473 manifests.go:109] [control-plane] adding volume \"usr-share-ca-certificates\" for component \"kube-controller-manager\"\nI0506 08:38:43.133738    7473 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-controller-manager\" to \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\nI0506 08:38:43.133763    7473 manifests.go:96] [control-plane] getting StaticPodSpecs\nI0506 08:38:43.136465    7473 manifests.go:109] [control-plane] adding volume \"kubeconfig\" for component \"kube-scheduler\"\nI0506 08:38:43.136996    7473 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-scheduler\" to \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\nI0506 08:38:43.137733    7473 local.go:82] [etcd] wrote Static Pod manifest for a local etcd member to \"/etc/kubernetes/manifests/etcd.yaml\"\nI0506 08:38:43.137755    7473 waitcontrolplane.go:87] [wait-control-plane] Waiting for the API server to be healthy\ncouldn't initialize a Kubernetes cluster\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/init.runWaitControlPlanePhase\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/init/waitcontrolplane.go:114\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run.func1\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:234\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).visitAll\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:422\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:207\nk8s.io/kubernetes/cmd/kubeadm/app/cmd.NewCmdInit.func1\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/init.go:149\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).execute\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:842\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).ExecuteC\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:950\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).Execute\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:887\nk8s.io/kubernetes/cmd/kubeadm/app.Run\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/kubeadm.go:50\nmain.main\n\t_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/kubeadm.go:25\nruntime.main\n\t/usr/local/go/src/runtime/proc.go:204\nruntime.goexit\n\t/usr/local/go/src/runtime/asm_amd64.s:1374\nerror execution phase wait-control-plane\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run.func1\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:235\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).visitAll\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:422\nk8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:207\nk8s.io/kubernetes/cmd/kubeadm/app/cmd.NewCmdInit.func1\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/init.go:149\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).execute\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:842\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).ExecuteC\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:950\nk8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).Execute\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:887\nk8s.io/kubernetes/cmd/kubeadm/app.Run\n\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/kubeadm.go:50\nmain.main\n\t_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/kubeadm.go:25\nruntime.main\n\t/usr/local/go/src/runtime/proc.go:204\nruntime.goexit\n\t/usr/local/go/src/runtime/asm_amd64.s:1374", "stderr_lines": ["I0506 08:38:30.286637    7473 initconfiguration.go:200] loading configuration from \"/home/ubuntu/clusterconfig.yml\"", "I0506 08:38:30.288530    7473 initconfiguration.go:103] detected and using CRI socket: /var/run/dockershim.sock", "I0506 08:38:30.288700    7473 interface.go:400] Looking for default routes with IPv4 addresses", "I0506 08:38:30.288717    7473 interface.go:405] Default route transits interface \"eth0\"", "I0506 08:38:30.288849    7473 interface.go:208] Interface eth0 is up", "I0506 08:38:30.288909    7473 interface.go:256] Interface \"eth0\" has 2 addresses :[172.31.30.201/20 fe80::81f:58ff:fe95:4edf/64].", "I0506 08:38:30.288941    7473 interface.go:223] Checking addr  172.31.30.201/20.", "I0506 08:38:30.288949    7473 interface.go:230] IP found 172.31.30.201", "I0506 08:38:30.288957    7473 interface.go:262] Found valid IPv4 address 172.31.30.201 for interface \"eth0\".", "I0506 08:38:30.288963    7473 interface.go:411] Found active IP 172.31.30.201 ", "W0506 08:38:30.346610    7473 configset.go:348] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io]", "I0506 08:38:30.346867    7473 checks.go:577] validating Kubernetes and kubeadm version", "I0506 08:38:30.346892    7473 checks.go:166] validating if the firewall is enabled and active", "I0506 08:38:30.355176    7473 checks.go:201] validating availability of port 6443", "I0506 08:38:30.355395    7473 checks.go:201] validating availability of port 10259", "I0506 08:38:30.355430    7473 checks.go:201] validating availability of port 10257", "I0506 08:38:30.355454    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/kube-apiserver.yaml", "I0506 08:38:30.355473    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/kube-controller-manager.yaml", "I0506 08:38:30.355491    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/kube-scheduler.yaml", "I0506 08:38:30.355499    7473 checks.go:286] validating the existence of file /etc/kubernetes/manifests/etcd.yaml", "I0506 08:38:30.355508    7473 checks.go:432] validating if the connectivity type is via proxy or direct", "I0506 08:38:30.355542    7473 checks.go:471] validating http connectivity to first IP address in the CIDR", "I0506 08:38:30.355566    7473 checks.go:471] validating http connectivity to first IP address in the CIDR", "I0506 08:38:30.355576    7473 checks.go:102] validating the container runtime", "I0506 08:38:30.405485    7473 checks.go:128] validating if the \"docker\" service is enabled and active", "\t[WARNING IsDockerSystemdCheck]: detected \"cgroupfs\" as the Docker cgroup driver. The recommended driver is \"systemd\". Please follow the guide at https://kubernetes.io/docs/setup/cri/", "I0506 08:38:30.477865    7473 checks.go:335] validating the contents of file /proc/sys/net/bridge/bridge-nf-call-iptables", "I0506 08:38:30.477908    7473 checks.go:335] validating the contents of file /proc/sys/net/ipv4/ip_forward", "I0506 08:38:30.477930    7473 checks.go:649] validating whether swap is enabled or not", "I0506 08:38:30.477962    7473 checks.go:376] validating the presence of executable conntrack", "I0506 08:38:30.477994    7473 checks.go:376] validating the presence of executable ip", "I0506 08:38:30.478019    7473 checks.go:376] validating the presence of executable iptables", "I0506 08:38:30.478038    7473 checks.go:376] validating the presence of executable mount", "I0506 08:38:30.478054    7473 checks.go:376] validating the presence of executable nsenter", "I0506 08:38:30.478088    7473 checks.go:376] validating the presence of executable ebtables", "I0506 08:38:30.478118    7473 checks.go:376] validating the presence of executable ethtool", "I0506 08:38:30.478134    7473 checks.go:376] validating the presence of executable socat", "I0506 08:38:30.478155    7473 checks.go:376] validating the presence of executable tc", "I0506 08:38:30.478191    7473 checks.go:376] validating the presence of executable touch", "I0506 08:38:30.478206    7473 checks.go:520] running all checks", "\t[WARNING SystemVerification]: this Docker version is not on the list of validated versions: 20.10.2. Latest validated version: 19.03", "I0506 08:38:30.541992    7473 checks.go:406] checking whether the given node name is reachable using net.LookupHost", "I0506 08:38:30.542675    7473 checks.go:618] validating kubelet version", "I0506 08:38:30.619738    7473 checks.go:128] validating if the \"kubelet\" service is enabled and active", "I0506 08:38:30.630782    7473 checks.go:201] validating availability of port 10250", "I0506 08:38:30.630849    7473 checks.go:201] validating availability of port 2379", "I0506 08:38:30.630875    7473 checks.go:201] validating availability of port 2380", "I0506 08:38:30.630900    7473 checks.go:249] validating the existence and emptiness of directory /var/lib/etcd", "I0506 08:38:30.685023    7473 checks.go:845] pulling k8s.gcr.io/kube-apiserver:v1.19.0", "I0506 08:38:33.126784    7473 checks.go:845] pulling k8s.gcr.io/kube-controller-manager:v1.19.0", "I0506 08:38:35.600567    7473 checks.go:845] pulling k8s.gcr.io/kube-scheduler:v1.19.0", "I0506 08:38:37.124519    7473 checks.go:845] pulling k8s.gcr.io/kube-proxy:v1.19.0", "I0506 08:38:38.619268    7473 checks.go:839] image exists: k8s.gcr.io/pause:3.2", "I0506 08:38:38.664091    7473 checks.go:839] image exists: k8s.gcr.io/etcd:3.4.9-1", "I0506 08:38:38.710389    7473 checks.go:839] image exists: k8s.gcr.io/coredns:1.7.0", "I0506 08:38:38.710455    7473 certs.go:103] creating a new certificate authority for ca", "I0506 08:38:39.360014    7473 certs.go:103] creating a new certificate authority for front-proxy-ca", "I0506 08:38:39.661025    7473 certs.go:103] creating a new certificate authority for etcd-ca", "I0506 08:38:41.235497    7473 certs.go:69] creating new public/private key files for signing service account users", "I0506 08:38:41.442926    7473 kubeconfig.go:84] creating kubeconfig file for admin.conf", "I0506 08:38:41.513064    7473 kubeconfig.go:84] creating kubeconfig file for kubelet.conf", "I0506 08:38:41.888092    7473 kubeconfig.go:84] creating kubeconfig file for controller-manager.conf", "I0506 08:38:42.660453    7473 kubeconfig.go:84] creating kubeconfig file for scheduler.conf", "I0506 08:38:42.954533    7473 kubelet.go:63] Stopping the kubelet", "I0506 08:38:43.124975    7473 manifests.go:96] [control-plane] getting StaticPodSpecs", "I0506 08:38:43.125451    7473 manifests.go:109] [control-plane] adding volume \"ca-certs\" for component \"kube-apiserver\"", "I0506 08:38:43.125472    7473 manifests.go:109] [control-plane] adding volume \"etc-ca-certificates\" for component \"kube-apiserver\"", "I0506 08:38:43.125478    7473 manifests.go:109] [control-plane] adding volume \"k8s-certs\" for component \"kube-apiserver\"", "I0506 08:38:43.125484    7473 manifests.go:109] [control-plane] adding volume \"usr-local-share-ca-certificates\" for component \"kube-apiserver\"", "I0506 08:38:43.125489    7473 manifests.go:109] [control-plane] adding volume \"usr-share-ca-certificates\" for component \"kube-apiserver\"", "I0506 08:38:43.132613    7473 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-apiserver\" to \"/etc/kubernetes/manifests/kube-apiserver.yaml\"", "I0506 08:38:43.132644    7473 manifests.go:96] [control-plane] getting StaticPodSpecs", "I0506 08:38:43.132904    7473 manifests.go:109] [control-plane] adding volume \"ca-certs\" for component \"kube-controller-manager\"", "I0506 08:38:43.132917    7473 manifests.go:109] [control-plane] adding volume \"etc-ca-certificates\" for component \"kube-controller-manager\"", "I0506 08:38:43.132923    7473 manifests.go:109] [control-plane] adding volume \"flexvolume-dir\" for component \"kube-controller-manager\"", "I0506 08:38:43.132928    7473 manifests.go:109] [control-plane] adding volume \"k8s-certs\" for component \"kube-controller-manager\"", "I0506 08:38:43.132933    7473 manifests.go:109] [control-plane] adding volume \"kubeconfig\" for component \"kube-controller-manager\"", "I0506 08:38:43.132938    7473 manifests.go:109] [control-plane] adding volume \"usr-local-share-ca-certificates\" for component \"kube-controller-manager\"", "I0506 08:38:43.132944    7473 manifests.go:109] [control-plane] adding volume \"usr-share-ca-certificates\" for component \"kube-controller-manager\"", "I0506 08:38:43.133738    7473 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-controller-manager\" to \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"", "I0506 08:38:43.133763    7473 manifests.go:96] [control-plane] getting StaticPodSpecs", "I0506 08:38:43.136465    7473 manifests.go:109] [control-plane] adding volume \"kubeconfig\" for component \"kube-scheduler\"", "I0506 08:38:43.136996    7473 manifests.go:135] [control-plane] wrote static Pod manifest for component \"kube-scheduler\" to \"/etc/kubernetes/manifests/kube-scheduler.yaml\"", "I0506 08:38:43.137733    7473 local.go:82] [etcd] wrote Static Pod manifest for a local etcd member to \"/etc/kubernetes/manifests/etcd.yaml\"", "I0506 08:38:43.137755    7473 waitcontrolplane.go:87] [wait-control-plane] Waiting for the API server to be healthy", "couldn't initialize a Kubernetes cluster", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/init.runWaitControlPlanePhase", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/init/waitcontrolplane.go:114", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run.func1", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:234", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).visitAll", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:422", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:207", "k8s.io/kubernetes/cmd/kubeadm/app/cmd.NewCmdInit.func1", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/init.go:149", "k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).execute", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:842", "k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).ExecuteC", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:950", "k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).Execute", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:887", "k8s.io/kubernetes/cmd/kubeadm/app.Run", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/kubeadm.go:50", "main.main", "\t_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/kubeadm.go:25", "runtime.main", "\t/usr/local/go/src/runtime/proc.go:204", "runtime.goexit", "\t/usr/local/go/src/runtime/asm_amd64.s:1374", "error execution phase wait-control-plane", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run.func1", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:235", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).visitAll", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:422", "k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:207", "k8s.io/kubernetes/cmd/kubeadm/app/cmd.NewCmdInit.func1", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/cmd/init.go:149", "k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).execute", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:842", "k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).ExecuteC", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:950", "k8s.io/kubernetes/vendor/github.com/spf13/cobra.(*Command).Execute", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/vendor/github.com/spf13/cobra/command.go:887", "k8s.io/kubernetes/cmd/kubeadm/app.Run", "\t/workspace/anago-v1.19.0-rc.4.197+594f888e19d8da/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/app/kubeadm.go:50", "main.main", "\t_output/dockerized/go/src/k8s.io/kubernetes/cmd/kubeadm/kubeadm.go:25", "runtime.main", "\t/usr/local/go/src/runtime/proc.go:204", "runtime.goexit", "\t/usr/local/go/src/runtime/asm_amd64.s:1374"], "stdout": "[init] Using Kubernetes version: v1.19.0\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'\n[certs] Using certificateDir folder \"/etc/kubernetes/pki\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [ip-172-31-30-201.ec2.internal kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.30.201 10.68.6.1]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] Generating \"etcd/ca\" certificate and key\n[certs] Generating \"etcd/server\" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [ip-172-31-30-201.ec2.internal localhost] and IPs [172.31.30.201 127.0.0.1 ::1]\n[certs] Generating \"etcd/peer\" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [ip-172-31-30-201.ec2.internal localhost] and IPs [172.31.30.201 127.0.0.1 ::1]\n[certs] Generating \"etcd/healthcheck-client\" certificate and key\n[certs] Generating \"apiserver-etcd-client\" certificate and key\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Starting the kubelet\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s\n[kubelet-check] Initial timeout of 40s passed.\n\n\tUnfortunately, an error has occurred:\n\t\ttimed out waiting for the condition\n\n\tThis error is likely caused by:\n\t\t- The kubelet is not running\n\t\t- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)\n\n\tIf you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:\n\t\t- 'systemctl status kubelet'\n\t\t- 'journalctl -xeu kubelet'\n\n\tAdditionally, a control plane component may have crashed or exited when started by the container runtime.\n\tTo troubleshoot, list all containers using your preferred container runtimes CLI.\n\n\tHere is one example how you may list all Kubernetes containers running in docker:\n\t\t- 'docker ps -a | grep kube | grep -v pause'\n\t\tOnce you have found the failing container, you can inspect its logs with:\n\t\t- 'docker logs CONTAINERID'", "stdout_lines": ["[init] Using Kubernetes version: v1.19.0", "[preflight] Running pre-flight checks", "[preflight] Pulling images required for setting up a Kubernetes cluster", "[preflight] This might take a minute or two, depending on the speed of your internet connection", "[preflight] You can also perform this action in beforehand using 'kubeadm config images pull'", "[certs] Using certificateDir folder \"/etc/kubernetes/pki\"", "[certs] Generating \"ca\" certificate and key", "[certs] Generating \"apiserver\" certificate and key", "[certs] apiserver serving cert is signed for DNS names [ip-172-31-30-201.ec2.internal kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 172.31.30.201 10.68.6.1]", "[certs] Generating \"apiserver-kubelet-client\" certificate and key", "[certs] Generating \"front-proxy-ca\" certificate and key", "[certs] Generating \"front-proxy-client\" certificate and key", "[certs] Generating \"etcd/ca\" certificate and key", "[certs] Generating \"etcd/server\" certificate and key", "[certs] etcd/server serving cert is signed for DNS names [ip-172-31-30-201.ec2.internal localhost] and IPs [172.31.30.201 127.0.0.1 ::1]", "[certs] Generating \"etcd/peer\" certificate and key", "[certs] etcd/peer serving cert is signed for DNS names [ip-172-31-30-201.ec2.internal localhost] and IPs [172.31.30.201 127.0.0.1 ::1]", "[certs] Generating \"etcd/healthcheck-client\" certificate and key", "[certs] Generating \"apiserver-etcd-client\" certificate and key", "[certs] Generating \"sa\" key and public key", "[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"", "[kubeconfig] Writing \"admin.conf\" kubeconfig file", "[kubeconfig] Writing \"kubelet.conf\" kubeconfig file", "[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file", "[kubeconfig] Writing \"scheduler.conf\" kubeconfig file", "[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"", "[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"", "[kubelet-start] Starting the kubelet", "[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"", "[control-plane] Creating static Pod manifest for \"kube-apiserver\"", "[control-plane] Creating static Pod manifest for \"kube-controller-manager\"", "[control-plane] Creating static Pod manifest for \"kube-scheduler\"", "[etcd] Creating static Pod manifest for local etcd in \"/etc/kubernetes/manifests\"", "[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\". This can take up to 4m0s", "[kubelet-check] Initial timeout of 40s passed.", "", "\tUnfortunately, an error has occurred:", "\t\ttimed out waiting for the condition", "", "\tThis error is likely caused by:", "\t\t- The kubelet is not running", "\t\t- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)", "", "\tIf you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:", "\t\t- 'systemctl status kubelet'", "\t\t- 'journalctl -xeu kubelet'", "", "\tAdditionally, a control plane component may have crashed or exited when started by the container runtime.", "\tTo troubleshoot, list all containers using your preferred container runtimes CLI.", "", "\tHere is one example how you may list all Kubernetes containers running in docker:", "\t\t- 'docker ps -a | grep kube | grep -v pause'", "\t\tOnce you have found the failing container, you can inspect its logs with:", "\t\t- 'docker logs CONTAINERID'"]}